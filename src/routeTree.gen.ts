/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { RootRoute, createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';

// Create Virtual Routes

const UsersLazyImport = createFileRoute('/users')();
const DogsLazyImport = createFileRoute('/dogs')();
const CounterLazyImport = createFileRoute('/counter')();
const CartLazyImport = createFileRoute('/cart')();
const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const UsersLazyRoute = UsersLazyImport.update({
	path: '/users',
	getParentRoute: () => rootRoute,
} as RootRoute).lazy(() => import('./routes/users.lazy').then((d) => d.Route));

const DogsLazyRoute = DogsLazyImport.update({
	path: '/dogs',
	getParentRoute: () => rootRoute,
} as RootRoute).lazy(() => import('./routes/dogs.lazy').then((d) => d.Route));

const CounterLazyRoute = CounterLazyImport.update({
	path: '/counter',
	getParentRoute: () => rootRoute,
} as RootRoute).lazy(() =>
	import('./routes/counter.lazy').then((d) => d.Route),
);

const CartLazyRoute = CartLazyImport.update({
	path: '/cart',
	getParentRoute: () => rootRoute,
} as RootRoute).lazy(() => import('./routes/cart.lazy').then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
	path: '/',
	getParentRoute: () => rootRoute,
} as RootRoute).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			preLoaderRoute: typeof IndexLazyImport;
			parentRoute: typeof rootRoute;
		};
		'/cart': {
			preLoaderRoute: typeof CartLazyImport;
			parentRoute: typeof rootRoute;
		};
		'/counter': {
			preLoaderRoute: typeof CounterLazyImport;
			parentRoute: typeof rootRoute;
		};
		'/dogs': {
			preLoaderRoute: typeof DogsLazyImport;
			parentRoute: typeof rootRoute;
		};
		'/users': {
			preLoaderRoute: typeof UsersLazyImport;
			parentRoute: typeof rootRoute;
		};
	}
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
	IndexLazyRoute,
	CartLazyRoute,
	CounterLazyRoute,
	DogsLazyRoute,
	UsersLazyRoute,
]);

/* prettier-ignore-end */
